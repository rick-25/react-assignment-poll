{"version":3,"sources":["components/Header.js","components/Poll.js","components/Title.js","components/PollList.js","components/User.js","components/App.js","index.js"],"names":["Header","_ref","title","react_default","a","createElement","className","Poll","poll","votePoll","_useState","useState","_useState2","Object","slicedToArray","isMarked","setIsMarked","question","options","map","option","key","_id","onClick","e","voteCount","totalVotes","toFixed","Title","PollList","polls","components_Title","el","components_Poll","length","User","src","alt","components_PollList","App","setPolls","_useState3","_useState4","userPolls","setUserPolls","SERVER_END_POINT","useEffect","fetchPolls","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","t0","json","t1","stop","apply","this","arguments","postPollApiCall","_ref2","_callee2","_context2","method","headers","Content-Type","body","JSON","stringify","status","abrupt","_x","handleForm","_ref3","_callee3","_e$target","reqestBody","serverResponse","_context3","target","preventDefault","value","forEach","push","concat","toConsumableArray","document","getElementById","reset","alert","_x2","_updatePollApiCall","_callee4","optionId","res","_context4","console","log","call","_x3","updatePollApiCall","components_Header","sort","b","action","onSubmit","id","type","name","placeholder","required","components_User","rootElement","ReactDOM","render","StrictMode","components_App"],"mappings":"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","file":"static/js/main.e9705c30.chunk.js","sourcesContent":["import React from \"react\";\n\nimport '../css/header.css'\n\nconst Header = ({ title }) => {\n    return (\n        <div className=\"header\">\n            <div className=\"brand\">\n                {title}\n            </div>\n        </div>\n    )\n};\n\nexport default Header;","import React, { useState } from \"react\";\n\nimport '../css/poll.css';\n\n\nfunction Poll({ poll, votePoll }) {\n\n    const [isMarked, setIsMarked] = useState(false);\n\n    return (\n        <div className=\"poll\">\n            <div className=\"question\">{poll.question}</div>\n            <div className=\"option-container\">\n                {poll.options.map((option =>\n                    <div className=\"option\" key={option._id} onClick={e => {\n                        votePoll(option._id);\n                        setIsMarked(true);\n                    }}>\n                        <div className=\"option-title\">{option.title}</div>\n                        {isMarked && <div className=\"option-percentage\">{(option.voteCount / poll.totalVotes * 100).toFixed(1)}%</div>}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Poll;\n\n","import React from 'react';\n\nimport '../css/title.css';\n\nfunction Title({ title }) {\n    return ( \n        <div className=\"title\">\n            {title}\n        </div>\n    );\n}\n\nexport default Title;","import React from 'react';\nimport Poll from './Poll';\nimport Title from './Title';\n\nimport '../css/polllist.css';\n\n\nfunction PollList( {title, polls, votePoll} ) {\n    return (\n        <div className=\"poll-list\">\n            <Title title={title}/>\n            <div className=\"container\">\n                {polls.map((el) => {\n                    return <Poll poll={el} key={el._id} votePoll={votePoll}/>\n                })}\n                {polls.length === 0 && <p>Sorry! empty list</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default PollList;","import React from 'react';\nimport PollList from './PollList';\n\n\nimport '../css/user.css';\n\nfunction User({ polls }) {\n    return (\n        <section className=\"user-section\">\n            <div className=\"user-card\">\n                <div className=\"container\">\n                    <img\n                        src=\"https://image.shutterstock.com/image-vector/portrait-photo-icon-flat-vector-600w-1648930807.jpg\"\n                        alt=\"user profile image\"\n                        className=\"user-image\"\n                    />\n                    <div className=\"user-name\">John</div>\n                    <div className=\"user-contact\">\n                        +91-237293293\n                        <br />\n                        temp123@gmail.com\n                    </div>\n                </div>\n            </div>\n            <PollList polls={polls} title=\"Your polls\" />\n        </section>\n    );\n}\n\nexport default User;","import React, { useEffect, useState } from \"react\";\n\nimport '../css/app.css';\n\n\nimport Header from \"./Header\";\nimport PollList from \"./PollList\";\nimport User from \"./User\";\n\n\nconst App = () => {\n\n    const [polls, setPolls] = useState([]);\n    const [userPolls, setUserPolls] = useState([]);\n\n    const SERVER_END_POINT = '';\n    const Poll_END_POINT = '/api/poll';\n\n    useEffect(() => {\n        fetchPolls();\n    }, []);\n\n    const fetchPolls = async function () {\n        const response = await fetch(Poll_END_POINT);\n        setPolls(await response.json());\n    }\n\n\n\n\n    const postPollApiCall = async (poll) => {\n        const response = await fetch(Poll_END_POINT, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(poll)\n        });\n        if (response.status !== 200) return null;\n        return await response.json();\n    }\n\n    const handleForm = async (e) => {\n        const { question, options } = e.target;\n        e.preventDefault();\n        let reqestBody = {\n            question: question.value,\n            options: []\n        };\n        options.forEach(el => {\n            if (el.value) reqestBody.options.push(el.value)\n        });\n\n        const serverResponse = await postPollApiCall(reqestBody);\n        if (serverResponse) {\n            fetchPolls();\n            setUserPolls([...userPolls, serverResponse]);\n            document.getElementById(\"add-poll-form\").reset();\n            alert(\"Values added\");\n        }\n    }\n\n    async function updatePollApiCall(optionId) {\n        const res = await fetch(SERVER_END_POINT + \"/api/vote/\" + optionId);\n        console.log(await res.json());\n    }\n\n\n\n\n    function votePoll(optionId) {\n        polls.forEach((poll) => {\n            poll.options.forEach(option => {\n                if (option._id === optionId) {\n                    option.voteCount++;\n                    poll.totalVotes++;\n                }\n            })\n        });\n        updatePollApiCall(optionId);\n        setPolls([...polls]);\n    }\n\n\n    return (\n        <div className=\"app\">\n            <Header title={\"Assignment\"} />\n            <div className=\"container\">\n                <section className=\"left\">\n                    <PollList title=\"Trending polls 🔥\" polls={[...polls].sort((a, b) => b.totalVotes - a.totalVotes)} votePoll={votePoll} />\n                </section>\n                <section className=\"center\">\n                    <div className=\"post-form\">\n                        <form action=\"/api/poll\" method=\"post\" onSubmit={handleForm} id=\"add-poll-form\">\n                            <input type=\"text\" name=\"question\" placeholder=\"Enter question e.g What's your fav starwar character?\" required={true} />\n                            <input type=\"text\" name=\"options\" placeholder=\"Enter 1st option\" required={true} />\n                            <input type=\"text\" name=\"options\" placeholder=\"Enter 2nd option\" required={true} />\n                            <input type=\"text\" name=\"options\" placeholder=\"Enter 3rd option\" required={true} />\n                            <input type=\"text\" name=\"options\" placeholder=\"Enter 4th option\" required={true} />\n                            <input type=\"submit\" value=\"Add poll\" />\n                        </form>\n                    </div>\n                    <PollList title=\"Latest polls\" polls={polls} votePoll={votePoll} />\n                </section>\n                <section className=\"right\">\n                    <User polls={userPolls} />\n                </section>\n            </div>\n        </div>\n    )\n}\n\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}